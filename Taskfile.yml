version: '3'
tasks:

  up-k3d:
    desc: "Create a 'workbench' k3d cluster"
    cmds:
      - k3d cluster delete workbench
      - k3d cluster create workbench --registry-create workbench-registry --config .k3d.yaml
    status:
      - k3d cluster get workbench
      - "k3d cluster get workbench -oyaml | grep 'Running: true'"

  down-k3d:
    desc: "Delete the 'workbench' k3d cluster"
    cmds:
      - k3d cluster delete workbench

  up-tilt:
    desc: "Run the tilt dev server"
    deps:
      - up-k3d
    cmds:
      - tilt up

  up-dev:
    desc: "Set up the development environment"
    deps:
      - up-tilt

  down-dev:
    desc: "Tear down the development environment"
    deps:
      - down-k3d

  run-redis-cli:
    desc: "Connect to the local dev cluster with redis-cli"
    cmds:
      - redis-cli
    env:
      REDISCLI_AUTH: &REDISCLI_AUTH
        sh: kubectl get secret --namespace default redis -o jsonpath="{.data.redis-password}" | base64 -d

  msgs-build:
    desc: "Build the msgs container image"
    cmds:
      - docker build ./msgs -f ./msgs/build/Dockerfile -t workbench/msgs:latest

  msgs-test:
    desc: "Run the msgs tests"
    dir: msgs
    cmds:
      - uv run pytest

  ps-format:
    desc: "Format Go code"
    dir: product-store
    cmds:
      - go tool gci write -s standard -s default -s localmodule --skip-generated .
      - gofmt -w .

  ps-lint:
    desc: "Lint Go code"
    dir: product-store
    cmds:
      - go vet ./...
      - go tool golangci-lint run -c ../.golangci.yml

  ps-generate:
    desc: "Generate Go code"
    dir: product-store
    cmds:
      - go tool oapi-codegen -config openapi/types.config.yaml openapi/types.spec.yaml
      - go tool oapi-codegen -config openapi/api.config.yaml openapi/api.spec.yaml

  ps-test:
    desc: "Run the product-store tests"
    dir: product-store
    cmds:
      - go tool gotestsum --format pkgname -- -count=1

  ps-build:
    desc: "Build the product-store container image"
    cmds:
      - docker build ./product-store -f ./product-store/build/Dockerfile -t workbench/product-store:latest

  ps-test-integration:
    desc: "Run the product-store integration tests"
    dir: product-store
    env:
      PS_TEST_REDIS_HOST: localhost
      PS_TEST_REDIS_PORT: 6379
      PS_TEST_REDIS_PASSWORD: *REDISCLI_AUTH
    cmds:
      - go tool gotestsum --format pkgname -- -tags=integration -count=1 ./pkg/test/internal/integration/...
